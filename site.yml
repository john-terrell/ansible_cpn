---
- hosts: pve_servers
  become: true
  pre_tasks:
  - name: Ensure enterprise Ceph apt repository is absent
    ansible.builtin.apt_repository:
      repo: deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise
      state: absent
      filename: ceph

  - name: Ensure non-enterprise Ceph apt repository is present
    ansible.builtin.apt_repository:
      repo: deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription
      state: present
      filename: ceph

  - name: Ensure enterprise Proxmox apt repositories is absent
    ansible.builtin.apt_repository:
      repo: deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise
      state: absent
      filename: pve-enterprise

  - name: Ensure non-enterprise Proxmox apt repositories are present
    ansible.builtin.apt_repository:
      repo: deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription
      state: present

- hosts: all
  become: true
  pre_tasks:
  - name: Ensure packages updated
    apt:
      update_cache: yes
      upgrade: dist
    when: ansible_distribution in ['Debian', 'Ubuntu']

  tasks:
  - name: Ensure common packages are installed
    apt:
      name:
      - vim
      - curl
      state: present

- hosts: qemu_vms
  become: true
  tasks:
  - name: Ensure QEMU quest agent is installed
    apt: 
      name:
      - qemu-guest-agent
      state: present
  - name: Ensure QEMU guest agent service is enabled
    service:
      name: qemu-guest-agent
      state: started
      enabled: true

- hosts: maas_controllers
  become: true
  roles:
  - maas_controller

- hosts: file_servers
  become: true
  roles:
  - cockpit-nas

- hosts: k8s_staging
  become: true
  roles: 
  # - role: ansible-keepalived
  #   vars:
  #     keepalived_instances:
  #       interface: "{{ vrrp_nic | default(ansible_default_ipv4.interface, true) }}"
  #       state: "{{ (groups['k8s_staging'].index(inventory_hostname) == 0) | ternary('MASTER','BACKUP') }}"
  #       virtual_router_id: "{{ virtual_router_id }}"
  #       priority: "{{ (inventory_hostname == groups['k8s_staging'][0]) | ternary('250', '100') }}"
  #       vips:
  #       - "{{ virtual_ip }} dev {{ vrrp_nic | default(ansible_default_ipv4.interface, true) }}"

  - role: ansible_role_microk8s
    vars:
      microk8s_version: 1.28/stable
      microk8s_plugins:
        community: true
        dns: true
        ha-cluster: true
        helm: true
        helm3: true
        ingress: true
        registry: true
        rook-ceph: true
        hostpath-storage: false

# Any K8S-staging cluster setup happens on k8s-staging1 host
# - hosts: k8s-staging1
#   tasks:
#   - name: Ensure NFS storage support repository is available.
#     kubernetes.core.helm_repository:
#       name: nfs-subdir-external-provisioner
#       repo_url: "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/"

#   - name: Ensure NFS storage support added to k8s-staging
#     kubernetes.core.helm:
#       release_name: nfs-subdir-external-provisioner 
#       chart_ref: nfs-subdir-external-provisioner/nfs-subdir-external-provisioner
#       release_namespace: nfs-subdir-provisioner
#       values:
#         nfs:
#           server: 10.10.64.10
#           path: /tank/k8s

- hosts: stash_servers
  become: true
  roles:
  - role: stash_host
